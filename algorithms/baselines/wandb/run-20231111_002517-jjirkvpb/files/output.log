/home/wanghm/anaconda3/envs/overcooked_ai/lib/python3.7/site-packages/gym/utils/env_checker.py:149: UserWarning: [33mWARN: Agent's maxmimum observation space value is infinity. This is probably too high
  "Agent's maxmimum observation space value is infinity. This is probably too high"
/home/wanghm/anaconda3/envs/overcooked_ai/lib/python3.7/site-packages/gym/envs/registration.py:620: UserWarning: [33mWARN: Env check failed with the following message: The observation returned by `reset()` method must be a numpy array
[33mYou can set `disable_env_checker=True` to disable this check.
  f"Env check failed with the following message: {e}\n"
Computing MediumLevelActionManager
Computing MediumLevelActionManager
Computing MediumLevelActionManager
Computing MediumLevelActionManager
Computing MediumLevelActionManager
Computing MediumLevelActionManager
Computing MediumLevelActionManager
Computing MediumLevelActionManager
Computing MediumLevelActionManager
Computing MediumLevelActionManager
Computing MediumLevelActionManager
Computing MediumLevelActionManager
Computing MediumLevelActionManager
Traceback (most recent call last):
  File "bcp.py", line 125, in <module>
    run()
  File "bcp.py", line 122, in run
    train(args, ego_agent=ego_agent, alt_agent=alt_agent, n_episodes=args.num_episodes, seed=args.seed, logger=None)  # wanghm
  File "bcp.py", line 43, in train
    obs_, sparse_reward, done, info = env.step((ego_a, alt_a))
  File "/home/wanghm/anaconda3/envs/overcooked_ai/lib/python3.7/site-packages/gym/wrappers/order_enforcing.py", line 37, in step
    return self.env.step(action)
  File "/alpha/overcooked_rl/bc/../src/overcooked_ai_py/mdp/overcooked_env.py", line 794, in step
    _, ob_p1 = self.alt_featurize_fn(next_state)
  File "/alpha/overcooked_rl/bc/../src/overcooked_ai_py/mdp/overcooked_env.py", line 291, in featurize_state_mdp
    return self.mdp.featurize_state(state, self.mlam, num_pots=num_pots)
  File "/alpha/overcooked_rl/bc/../src/overcooked_ai_py/mdp/overcooked_mdp.py", line 2863, in featurize_state
    features = np.concatenate(list(player_i_dict.values()))
KeyboardInterrupt
Computing MediumLevelActionManager